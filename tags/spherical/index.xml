<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spherical on Enrico&#39;s Blog</title>
    <link>http://enrico.spinielli.net/tags/spherical/</link>
    <description>Recent content in Spherical on Enrico&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Enrico Spinielli</copyright>
    <lastBuildDate>Sun, 19 Oct 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://enrico.spinielli.net/tags/spherical/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding Great Circle Arcs Intersection Algorithm</title>
      <link>http://enrico.spinielli.net/2014/10/19/understanding-great-circle-arcs_57/</link>
      <pubDate>Sun, 19 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2014/10/19/understanding-great-circle-arcs_57/</guid>
      <description>The following material is the result of my attempt to understand the nice example from Jason Davies. I was puzzled about the origin of the algorithm used to find the intersection of two great circle arcs. Google helped and I discovered Roger Stafford&amp;rsquo;s post in Matlab newsgroup and the relevant Python&amp;rsquo;s implementation in the Spherical Geometry Toolkit.
The algorithm You have two great circle arcs on a sphere, $a$ from point $\mathbf{a_0}$ to $\mathbf{a_1}$, and $b$ from $\mathbf{b_0}$ to $\mathbf{b_1}$, whose coordinates are expressed as longitude $\theta$ (positive going East of Greenwich) and latitude $\phi$ (positive going North).</description>
    </item>
    
  </channel>
</rss>