<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>D3.js on Enrico&#39;s Blog</title>
    <link>http://enrico.spinielli.net/tags/d3.js/</link>
    <description>Recent content in D3.js on Enrico&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Enrico Spinielli</copyright>
    <lastBuildDate>Sat, 08 Aug 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://enrico.spinielli.net/tags/d3.js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Learning Vega 2.0 a.k.a. Reactive Vega</title>
      <link>http://enrico.spinielli.net/2015/08/08/learning-reactive-vega/</link>
      <pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2015/08/08/learning-reactive-vega/</guid>
      <description>h1 ~ aside { font-size: small; right: 0; position: absolute; width: 180px; }  A Grammar of Graphics Vega 2.0 adds a grammar of interaction to the grammar of graphics implemented in Vega 1.0.
When you say grammar of graphics all roads bring you to
 Leland Wilkinson The Grammar of Graphics Springer Science &amp;amp; Business Media, Jul 15, 2005
 But given the price of 100+ USD, I am not even thinking of getting my hands on it.</description>
    </item>
    
    <item>
      <title>How to add a new chart type to dc.js</title>
      <link>http://enrico.spinielli.net/2015/04/21/how-to-add-a-new-chart-type-to-dcjs/</link>
      <pubDate>Tue, 21 Apr 2015 17:56:42 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2015/04/21/how-to-add-a-new-chart-type-to-dcjs/</guid>
      <description>This is a step by step description of how I extended dc.js with a new chart type. It is inspired by a wiki page by Thomas Robert.
A Bullet chart Mike Bostock already implemented a bullet chart in D3.js. The vertical version from Jason Davies uses the official code which is available as a d3-plugin. (I have submitted a proposal for a bug fix and will use it instead.)</description>
    </item>
    
    <item>
      <title>Understanding Great Circle Arcs Intersection Algorithm</title>
      <link>http://enrico.spinielli.net/2014/10/19/understanding-great-circle-arcs_57/</link>
      <pubDate>Sun, 19 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2014/10/19/understanding-great-circle-arcs_57/</guid>
      <description>The following material is the result of my attempt to understand the nice example from Jason Davies. I was puzzled about the origin of the algorithm used to find the intersection of two great circle arcs. Google helped and I discovered Roger Stafford&amp;rsquo;s post in Matlab newsgroup and the relevant Python&amp;rsquo;s implementation in the Spherical Geometry Toolkit.
The algorithm You have two great circle arcs on a sphere, $a$ from point $\mathbf{a_0}$ to $\mathbf{a_1}$, and $b$ from $\mathbf{b_0}$ to $\mathbf{b_1}$, whose coordinates are expressed as longitude $\theta$ (positive going East of Greenwich) and latitude $\phi$ (positive going North).</description>
    </item>
    
  </channel>
</rss>