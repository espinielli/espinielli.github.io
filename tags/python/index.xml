<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Enrico&#39;s Blog</title>
    <link>http://enrico.spinielli.net/tags/python/</link>
    <description>Recent content in Python on Enrico&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Enrico Spinielli</copyright>
    <lastBuildDate>Sun, 09 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://enrico.spinielli.net/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PyCalCal</title>
      <link>http://enrico.spinielli.net/project/pycalcal/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/project/pycalcal/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Automatically extracting bomb drops from the Blitz Bomb Census maps</title>
      <link>http://enrico.spinielli.net/2012/05/19/automatically-extracting-bomb-drops/</link>
      <pubDate>Sat, 19 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2012/05/19/automatically-extracting-bomb-drops/</guid>
      <description>I just finished Blackout by Connie Willis&amp;nbsp;and I was wondering where she did get all the exact times when the air raids of The Blitz were happening.
I am curious because I was thinking that a timeline map would give a visual effect of the huge destruction and hard times the Londoners had to go through...so I googled for it and found the following:
a nice research blog&amp;nbsp;which uses the Blitz Bomb Census from The National Archivesa blog entry from the Guardian about the first day - and data - of the Blitz over London.</description>
    </item>
    
    <item>
      <title>PyCalCal is out!</title>
      <link>http://enrico.spinielli.net/2009/10/26/pycalcal-is-out/</link>
      <pubDate>Mon, 26 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2009/10/26/pycalcal-is-out/</guid>
      <description>I finally set to put PyCalCal out in the open.
I will need to finalize and perfect it but that is a good starting point.
I also added a demo web app using it.
My idea is for PyCalCal to be used as a Python library and as such use it to provide calendrica calculations as web services.
Stay tuned if you are interested.</description>
    </item>
    
    <item>
      <title>Scons and noweb</title>
      <link>http://enrico.spinielli.net/2009/06/14/scons-and-noweb/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2009/06/14/scons-and-noweb/</guid>
      <description>I was curious to see how I could integrate noweb and Scons.
You can download my little Sconstruct for this, Sconstruct.example. It defines two builders. NoWeave is used to produce TeX or LaTeX documents, while NoTangle extracts the non-document artefacts, i.e. programs, config files, scripts &amp;hellip; It also includes productions for generating a sample program about Ackermann function:
ackdoc = env.NoWeave(&amp;#39;ack.tex&amp;#39;, &amp;#39;ack.nw&amp;#39;) ackcode = env.NoTangle(&amp;#39;ack.py&amp;#39;, &amp;#39;ack.nw&amp;#39;) acktest = env.NoTangle(&amp;#39;ackTest.py&amp;#39;, &amp;#39;ack.nw&amp;#39;) The noweb source is ack.</description>
    </item>
    
    <item>
      <title>LaTeX, Python and Literate Programming</title>
      <link>http://enrico.spinielli.net/2009/02/24/latex-python-and-literate-programming/</link>
      <pubDate>Tue, 24 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2009/02/24/latex-python-and-literate-programming/</guid>
      <description>In my spare time (a couple of hours per weekend&amp;hellip;!) I am implementing calcal, a Python version of calendrica-3.0.cl, the Common Lisp implementation of the calendars from N. Dershowitz, E. M. Reingold Calendrical Calculations, 3rd Edition. (In case you are interested you can find a preview in my github repo.)
At some point I decided to go Literate Programming using noweb. This is an experiment in the experiment but so far it has been a good choice because I can define all I need in the same place and generate documentation, source code (Python, shell scripts &amp;hellip;) from the same source.</description>
    </item>
    
  </channel>
</rss>