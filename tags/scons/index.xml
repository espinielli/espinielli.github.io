<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scons on Enrico&#39;s Blog</title>
    <link>http://enrico.spinielli.net/tags/scons/</link>
    <description>Recent content in Scons on Enrico&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Enrico Spinielli</copyright>
    <lastBuildDate>Sun, 14 Jun 2009 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://enrico.spinielli.net/tags/scons/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scons and noweb</title>
      <link>http://enrico.spinielli.net/2009/06/14/scons-and-noweb/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2009/06/14/scons-and-noweb/</guid>
      <description>I was curious to see how I could integrate noweb and Scons.
You can download my little Sconstruct for this, Sconstruct.example. It defines two builders. NoWeave is used to produce TeX or LaTeX documents, while NoTangle extracts the non-document artefacts, i.e. programs, config files, scripts &amp;hellip; It also includes productions for generating a sample program about Ackermann function:
ackdoc = env.NoWeave(&amp;#39;ack.tex&amp;#39;, &amp;#39;ack.nw&amp;#39;) ackcode = env.NoTangle(&amp;#39;ack.py&amp;#39;, &amp;#39;ack.nw&amp;#39;) acktest = env.NoTangle(&amp;#39;ackTest.py&amp;#39;, &amp;#39;ack.nw&amp;#39;) The noweb source is ack.</description>
    </item>
    
    <item>
      <title>LaTeX, Python and Literate Programming</title>
      <link>http://enrico.spinielli.net/2009/02/24/latex-python-and-literate-programming/</link>
      <pubDate>Tue, 24 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://enrico.spinielli.net/2009/02/24/latex-python-and-literate-programming/</guid>
      <description>In my spare time (a couple of hours per weekend&amp;hellip;!) I am implementing calcal, a Python version of calendrica-3.0.cl, the Common Lisp implementation of the calendars from N. Dershowitz, E. M. Reingold Calendrical Calculations, 3rd Edition. (In case you are interested you can find a preview in my github repo.)
At some point I decided to go Literate Programming using noweb. This is an experiment in the experiment but so far it has been a good choice because I can define all I need in the same place and generate documentation, source code (Python, shell scripts &amp;hellip;) from the same source.</description>
    </item>
    
  </channel>
</rss>